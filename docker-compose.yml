services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      # Disable runtime build in prod-like runs; assets are built by the assets job
      BUILD_ASSETS: "false"
    volumes:
      - .:/var/www/html
      - vite_build:/var/www/html/public/build
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
      assets:
        condition: service_completed_successfully
    restart: unless-stopped

  assets:
    image: node:20
    working_dir: /app
    volumes:
      - .:/app
      - vite_build:/app/public/build
    command: >
      sh -lc "CI=true npm ci --no-audit --no-fund &&
              NODE_ENV=production npm run build"
    restart: "no"

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${DB_ROOT_PASSWORD} || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 20
    ports:
      - "3307:3306"
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:5
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy

volumes:
  dbdata:
  vite_build:

